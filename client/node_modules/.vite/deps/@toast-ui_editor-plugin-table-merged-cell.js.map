{
  "version": 3,
  "sources": ["../../@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.js"],
  "sourcesContent": ["/*!\n * TOAST UI Editor : Table Merged Cell Plugin\n * @version 3.1.0 | Fri Aug 05 2022\n * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>\n * @license MIT\n */\n/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 893:\n/***/ (function(module) {\n\n/**\n * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\n/**\n * Execute the provided callback once for each element present\n * in the array(or Array-like object) in ascending order.\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the element\n *  2) The index of the element\n *  3) The array(or Array-like object) being traversed\n * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n * @param {function} iteratee Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * // ES6\n * import forEachArray from 'tui-code-snippet/collection/forEachArray';\n * \n * // CommonJS\n * const forEachArray = require('tui-code-snippet/collection/forEachArray'); \n *\n * let sum = 0;\n *\n * forEachArray([1,2,3], function(value){\n *   sum += value;\n * });\n * alert(sum); // 6\n */\nfunction forEachArray(arr, iteratee, context) {\n  var index = 0;\n  var len = arr.length;\n\n  context = context || null;\n\n  for (; index < len; index += 1) {\n    if (iteratee.call(context, arr[index], index, arr) === false) {\n      break;\n    }\n  }\n}\n\nmodule.exports = forEachArray;\n\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n/**\n * @fileoverview Transform the Array-like object to Array.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n\n\nvar forEachArray = __webpack_require__(893);\n\n/**\n * Transform the Array-like object to Array.\n * In low IE (below 8), Array.prototype.slice.call is not perfect. So, try-catch statement is used.\n * @param {*} arrayLike Array-like object\n * @returns {Array} Array\n * @memberof module:collection\n * @example\n * // ES6\n * import toArray from 'tui-code-snippet/collection/toArray'; \n * \n * // CommonJS\n * const toArray = require('tui-code-snippet/collection/toArray'); \n *\n * const arrayLike = {\n *   0: 'one',\n *   1: 'two',\n *   2: 'three',\n *   3: 'four',\n *   length: 4\n * };\n * const result = toArray(arrayLike);\n *\n * alert(result instanceof Array); // true\n * alert(result); // one,two,three,four\n */\nfunction toArray(arrayLike) {\n  var arr;\n  try {\n    arr = Array.prototype.slice.call(arrayLike);\n  } catch (e) {\n    arr = [];\n    forEachArray(arrayLike, function(value) {\n      arr.push(value);\n    });\n  }\n\n  return arr;\n}\n\nmodule.exports = toArray;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ tableMergedCellPlugin; }\n});\n\n;// CONCATENATED MODULE: ./src/markdown/parser.ts\nfunction getSpanInfo(content, type, oppositeType) {\n    var reSpan = new RegExp(\"^((?:\" + oppositeType + \"=[0-9]+:)?)\" + type + \"=([0-9]+):(.*)\");\n    var parsed = reSpan.exec(content);\n    var spanCount = 1;\n    if (parsed) {\n        spanCount = parseInt(parsed[2], 10);\n        content = parsed[1] + parsed[3];\n    }\n    return [spanCount, content];\n}\nfunction extendTableCellIndexWithRowspanMap(node, parent, rowspan) {\n    var prevRow = parent.prev;\n    if (prevRow) {\n        var columnLen = parent.parent.parent.columns.length;\n        // increment the index when prev row has the rowspan count.\n        for (var i = node.startIdx; i < columnLen; i += 1) {\n            var prevRowspanCount = prevRow.rowspanMap[i];\n            if (prevRowspanCount && prevRowspanCount > 1) {\n                parent.rowspanMap[i] = prevRowspanCount - 1;\n                if (i <= node.endIdx) {\n                    node.startIdx += 1;\n                    node.endIdx += 1;\n                }\n            }\n        }\n    }\n    if (rowspan > 1) {\n        var startIdx = node.startIdx, endIdx = node.endIdx;\n        for (var i = startIdx; i <= endIdx; i += 1) {\n            parent.rowspanMap[i] = rowspan;\n        }\n    }\n}\nvar markdownParsers = {\n    // @ts-expect-error\n    tableRow: function (node, _a) {\n        var entering = _a.entering;\n        if (entering) {\n            node.rowspanMap = {};\n            if (node.prev && !node.firstChild) {\n                var prevRowspanMap_1 = node.prev.rowspanMap;\n                Object.keys(prevRowspanMap_1).forEach(function (key) {\n                    if (prevRowspanMap_1[key] > 1) {\n                        node.rowspanMap[key] = prevRowspanMap_1[key] - 1;\n                    }\n                });\n            }\n        }\n    },\n    // @ts-expect-error\n    tableCell: function (node, _a) {\n        var _b, _c;\n        var entering = _a.entering;\n        var parent = node.parent, prev = node.prev, stringContent = node.stringContent;\n        if (entering) {\n            var attrs = {};\n            var content = stringContent;\n            var _d = [1, 1], colspan = _d[0], rowspan = _d[1];\n            _b = getSpanInfo(content, '@cols', '@rows'), colspan = _b[0], content = _b[1];\n            _c = getSpanInfo(content, '@rows', '@cols'), rowspan = _c[0], content = _c[1];\n            node.stringContent = content;\n            if (prev) {\n                node.startIdx = prev.endIdx + 1;\n                node.endIdx = node.startIdx;\n            }\n            if (colspan > 1) {\n                attrs.colspan = colspan;\n                node.endIdx += colspan - 1;\n            }\n            if (rowspan > 1) {\n                attrs.rowspan = rowspan;\n            }\n            node.attrs = attrs;\n            extendTableCellIndexWithRowspanMap(node, parent, rowspan);\n            var tablePart = parent.parent;\n            if (tablePart.type === 'tableBody' && node.endIdx >= tablePart.parent.columns.length) {\n                node.ignored = true;\n            }\n        }\n    },\n};\n\n;// CONCATENATED MODULE: ./src/markdown/renderer.ts\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar toHTMLRenderers = {\n    // @ts-ignore\n    tableRow: function (node, _a) {\n        var entering = _a.entering, origin = _a.origin;\n        if (entering) {\n            return origin();\n        }\n        var result = [];\n        if (node.lastChild) {\n            var columnLen = node.parent.parent.columns.length;\n            var lastColIdx = node.lastChild.endIdx;\n            for (var i = lastColIdx + 1; i < columnLen; i += 1) {\n                if (!node.prev || !node.prev.rowspanMap[i] || node.prev.rowspanMap[i] <= 1) {\n                    result.push({\n                        type: 'openTag',\n                        tagName: 'td',\n                        outerNewLine: true,\n                    }, {\n                        type: 'closeTag',\n                        tagName: 'td',\n                        outerNewLine: true,\n                    });\n                }\n            }\n        }\n        result.push({\n            type: 'closeTag',\n            tagName: 'tr',\n            outerNewLine: true,\n        });\n        return result;\n    },\n    // @ts-ignore\n    tableCell: function (node, _a) {\n        var entering = _a.entering, origin = _a.origin;\n        var result = origin();\n        if (node.ignored) {\n            return result;\n        }\n        if (entering) {\n            var attributes = __assign({}, node.attrs);\n            result.attributes = __assign(__assign({}, result.attributes), attributes);\n        }\n        return result;\n    },\n};\n\n;// CONCATENATED MODULE: ./src/wysiwyg/renderer.ts\nvar DELIM_LENGH = 3;\nfunction repeat(text, count) {\n    var result = '';\n    for (var i = 0; i < count; i += 1) {\n        result += text;\n    }\n    return result;\n}\nfunction createTableHeadDelim(textContent, columnAlign) {\n    var textLen = textContent.length;\n    var leftDelim = '';\n    var rightDelim = '';\n    if (columnAlign === 'left') {\n        leftDelim = ':';\n        textLen -= 1;\n    }\n    else if (columnAlign === 'right') {\n        rightDelim = ':';\n        textLen -= 1;\n    }\n    else if (columnAlign === 'center') {\n        leftDelim = ':';\n        rightDelim = ':';\n        textLen -= 2;\n    }\n    return \"\" + leftDelim + repeat('-', Math.max(textLen, DELIM_LENGH)) + rightDelim;\n}\nfunction createDelim(node) {\n    var _a = node.attrs, rowspan = _a.rowspan, colspan = _a.colspan;\n    var spanInfo = '';\n    if (rowspan) {\n        spanInfo = \"@rows=\" + rowspan + \":\";\n    }\n    if (colspan) {\n        spanInfo = \"@cols=\" + colspan + \":\" + spanInfo;\n    }\n    return { delim: \"| \" + spanInfo };\n}\nvar toMarkdownRenderers = {\n    tableHead: function (nodeInfo) {\n        var row = nodeInfo.node.firstChild;\n        var delim = '';\n        if (row) {\n            row.forEach(function (_a) {\n                var textContent = _a.textContent, attrs = _a.attrs;\n                var headDelim = createTableHeadDelim(textContent, attrs.align);\n                delim += \"| \" + headDelim + \" \";\n                if (attrs.colspan) {\n                    for (var i = 0; i < attrs.colspan - 1; i += 1) {\n                        delim += \"| \" + headDelim + \" \";\n                    }\n                }\n            });\n        }\n        return { delim: delim };\n    },\n    tableHeadCell: function (nodeInfo) {\n        return createDelim(nodeInfo.node);\n    },\n    tableBodyCell: function (nodeInfo) {\n        return createDelim(nodeInfo.node);\n    },\n};\n\n;// CONCATENATED MODULE: ./src/i18n/langs.ts\nfunction addLangs(i18n) {\n    i18n.setLanguage(['ko', 'ko-KR'], {\n        'Merge cells': '셀 병합',\n        'Split cells': '셀 병합해제',\n        'Cannot change part of merged cell': '병합된 셀의 일부를 변경할 수 없습니다.',\n        'Cannot paste row merged cells into the table header': '테이블 헤더에는 행 병합된 셀을 붙여넣을 수 없습니다.',\n    });\n    i18n.setLanguage(['en', 'en-US'], {\n        'Merge cells': 'Merge cells',\n        'Split cells': 'Split cells',\n        'Cannot change part of merged cell': 'Cannot change part of merged cell.',\n        'Cannot paste row merged cells into the table header': 'Cannot paste row merged cells into the table header.',\n    });\n    i18n.setLanguage(['es', 'es-ES'], {\n        'Merge cells': 'Combinar celdas',\n        'Split cells': 'Separar celdas',\n        'Cannot change part of merged cell': 'No se puede cambiar parte de una celda combinada.',\n        'Cannot paste row merged cells into the table header': 'No se pueden pegar celdas combinadas en el encabezado de tabla.',\n    });\n    i18n.setLanguage(['ja', 'ja-JP'], {\n        'Merge cells': 'セルの結合',\n        'Split cells': 'セルの結合を解除',\n        'Cannot change part of merged cell': '結合されたセルの一部を変更することはできません。',\n        'Cannot paste row merged cells into the table header': '行にマージされたセルをヘッダーに貼り付けることはできません。',\n    });\n    i18n.setLanguage(['nl', 'nl-NL'], {\n        'Merge cells': 'Cellen samenvoegen',\n        'Split cells': 'Samengevoegde cellen ongedaan maken',\n        'Cannot change part of merged cell': 'Kan geen deel uit van een samengevoegde cel veranderen.',\n        'Cannot paste row merged cells into the table header': 'Kan geen rij met samengevoegde cellen in de koptekst plakken.',\n    });\n    i18n.setLanguage('zh-CN', {\n        'Merge cells': '合并单元格',\n        'Split cells': '取消合并单元格',\n        'Cannot change part of merged cell': '无法更改合并单元格的一部分。',\n        'Cannot paste row merged cells into the table header': '无法将行合并单元格粘贴到标题中。',\n    });\n    i18n.setLanguage(['de', 'de-DE'], {\n        'Merge cells': 'Zellen zusammenführen',\n        'Split cells': 'Zusammenführen rückgängig machen',\n        'Cannot change part of merged cell': 'Der Teil der verbundenen Zelle kann nicht geändert werden.',\n        'Cannot paste row merged cells into the table header': 'Die Zeile der verbundenen Zellen kann nicht in die Kopfzeile eingefügt werden.',\n    });\n    i18n.setLanguage(['ru', 'ru-RU'], {\n        'Merge cells': 'Объединить ячейки',\n        'Split cells': 'Разъединить ячейки',\n        'Cannot change part of merged cell': 'Вы не можете изменять часть комбинированной ячейки.',\n        'Cannot paste row merged cells into the table header': 'Вы не можете вставлять объединенные ячейки в заголовок таблицы.',\n    });\n    i18n.setLanguage(['fr', 'fr-FR'], {\n        'Merge cells': 'Fusionner les cellules',\n        'Split cells': 'Séparer les cellules',\n        'Cannot change part of merged cell': 'Impossible de modifier une partie de la cellule fusionnée.',\n        'Cannot paste row merged cells into the table header': \"Impossible de coller les cellules fusionnées dans l'en-tête du tableau.\",\n    });\n    i18n.setLanguage(['uk', 'uk-UA'], {\n        'Merge cells': \"Об'єднати комірки\",\n        'Split cells': \"Роз'єднати комірки\",\n        'Cannot change part of merged cell': 'Ви не можете змінювати частину комбінованої комірки.',\n        'Cannot paste row merged cells into the table header': \"Ви не можете вставляти об'єднані комірки в заголовок таблиці.\",\n    });\n    i18n.setLanguage(['tr', 'tr-TR'], {\n        'Merge cells': 'Hücreleri birleştir',\n        'Split cells': 'Hücreleri ayır',\n        'Cannot change part of merged cell': 'Birleştirilmiş hücrelerin bir kısmı değiştirelemez.',\n        'Cannot paste row merged cells into the table header': 'Satırda birleştirilmiş hücreler sütun başlığına yapıştırılamaz',\n    });\n    i18n.setLanguage(['fi', 'fi-FI'], {\n        'Merge cells': 'Yhdistä solut',\n        'Split cells': 'Jaa solut',\n        'Cannot change part of merged cell': 'Yhdistettyjen solujen osaa ei voi muuttaa',\n        'Cannot paste row merged cells into the table header': 'Soluja ei voi yhdistää taulukon otsikkoriviin',\n    });\n    i18n.setLanguage(['cs', 'cs-CZ'], {\n        'Merge cells': 'Spojit buňky',\n        'Split cells': 'Rozpojit buňky',\n        'Cannot change part of merged cell': 'Nelze měnit část spojené buňky',\n        'Cannot paste row merged cells into the table header': 'Nelze vkládat spojené buňky do záhlaví tabulky',\n    });\n    i18n.setLanguage('ar', {\n        'Merge cells': 'دمج الوحدات',\n        'Split cells': 'إلغاء دمج الوحدات',\n        'Cannot change part of merged cell': 'لا يمكن تغيير جزء من الخلية المدموجة',\n        'Cannot paste row merged cells into the table header': 'لا يمكن لصق الخلايا المدموجة من صف واحد في رأس الجدول',\n    });\n    i18n.setLanguage(['pl', 'pl-PL'], {\n        'Merge cells': 'Scal komórki',\n        'Split cells': 'Rozłącz komórki',\n        'Cannot change part of merged cell': 'Nie można zmienić części scalonej komórki.',\n        'Cannot paste row merged cells into the table header': 'Nie można wkleić komórek o scalonym rzędzie w nagłówek tabeli.',\n    });\n    i18n.setLanguage('zh-TW', {\n        'Merge cells': '合併儲存格',\n        'Split cells': '取消合併儲存格',\n        'Cannot change part of merged cell': '無法變更儲存格的一部分。',\n        'Cannot paste row merged cells into the table header': '無法將合併的儲存格貼上至表格標題中。',\n    });\n    i18n.setLanguage(['gl', 'gl-ES'], {\n        'Merge cells': 'Combinar celas',\n        'Split cells': 'Separar celas',\n        'Cannot change part of merged cell': 'Non se pode cambiar parte dunha cela combinada',\n        'Cannot paste row merged cells into the table header': 'Non se poden pegar celas no encabezado da táboa',\n    });\n    i18n.setLanguage(['sv', 'sv-SE'], {\n        'Merge cells': 'Sammanfoga celler',\n        'Split cells': 'Dela celler',\n        'Cannot change part of merged cell': 'Ej möjligt att ändra en del av en sammanfogad cell',\n        'Cannot paste row merged cells into the table header': 'Ej möjligt att klistra in rad-sammanfogade celler i tabellens huvud',\n    });\n    i18n.setLanguage(['it', 'it-IT'], {\n        'Merge cells': 'Unisci celle',\n        'Split cells': 'Separa celle',\n        'Cannot change part of merged cell': 'Non è possibile modificare parte di una cella unita',\n        'Cannot paste row merged cells into the table header': \"Non è possibile incollare celle unite per riga nell'intestazione della tabella\",\n    });\n    i18n.setLanguage(['nb', 'nb-NO'], {\n        'Merge cells': 'Slå sammen celler',\n        'Split cells': 'Separer celler',\n        'Cannot change part of merged cell': 'Kan ikke endre deler av sammenslåtte celler',\n        'Cannot paste row merged cells into the table header': 'Kan ikke lime inn rad med sammenslåtte celler',\n    });\n    i18n.setLanguage(['hr', 'hr-HR'], {\n        'Merge cells': 'Spoji ćelije',\n        'Split cells': 'Odspoji ćelije',\n        'Cannot change part of merged cell': 'Ne mogu mijenjati dio spojene ćelije.',\n        'Cannot paste row merged cells into the table header': 'Ne mogu zaljepiti redak spojenih ćelija u zaglavlje tablice',\n    });\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/tableOffsetMapMixin.ts\nvar tableOffsetMapMixin_assign = (undefined && undefined.__assign) || function () {\n    tableOffsetMapMixin_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return tableOffsetMapMixin_assign.apply(this, arguments);\n};\nvar offsetMapMixin = {\n    extendedRowspan: function (rowIdx, colIdx) {\n        var rowspanInfo = this.rowInfo[rowIdx].rowspanMap[colIdx];\n        return !!rowspanInfo && rowspanInfo.startSpanIdx !== rowIdx;\n    },\n    extendedColspan: function (rowIdx, colIdx) {\n        var colspanInfo = this.rowInfo[rowIdx].colspanMap[colIdx];\n        return !!colspanInfo && colspanInfo.startSpanIdx !== colIdx;\n    },\n    getRowspanCount: function (rowIdx, colIdx) {\n        var rowspanInfo = this.rowInfo[rowIdx].rowspanMap[colIdx];\n        return rowspanInfo ? rowspanInfo.count : 0;\n    },\n    getColspanCount: function (rowIdx, colIdx) {\n        var colspanInfo = this.rowInfo[rowIdx].colspanMap[colIdx];\n        return colspanInfo ? colspanInfo.count : 0;\n    },\n    decreaseColspanCount: function (rowIdx, colIdx) {\n        var colspanInfo = this.rowInfo[rowIdx].colspanMap[colIdx];\n        var startColspanInfo = this.rowInfo[rowIdx].colspanMap[colspanInfo.startSpanIdx];\n        startColspanInfo.count -= 1;\n        return startColspanInfo.count;\n    },\n    decreaseRowspanCount: function (rowIdx, colIdx) {\n        var rowspanInfo = this.rowInfo[rowIdx].rowspanMap[colIdx];\n        var startRowspanInfo = this.rowInfo[rowspanInfo.startSpanIdx].rowspanMap[colIdx];\n        startRowspanInfo.count -= 1;\n        return startRowspanInfo.count;\n    },\n    getColspanStartInfo: function (rowIdx, colIdx) {\n        var colspanMap = this.rowInfo[rowIdx].colspanMap;\n        var colspanInfo = colspanMap[colIdx];\n        if (colspanInfo) {\n            var startSpanIdx = colspanInfo.startSpanIdx;\n            var cellInfo = this.rowInfo[rowIdx][startSpanIdx];\n            return {\n                node: this.table.nodeAt(cellInfo.offset - this.tableStartOffset),\n                pos: cellInfo.offset,\n                startSpanIdx: startSpanIdx,\n                count: colspanMap[startSpanIdx].count,\n            };\n        }\n        return null;\n    },\n    getRowspanStartInfo: function (rowIdx, colIdx) {\n        var rowspanMap = this.rowInfo[rowIdx].rowspanMap;\n        var rowspanInfo = rowspanMap[colIdx];\n        if (rowspanInfo) {\n            var startSpanIdx = rowspanInfo.startSpanIdx;\n            var cellInfo = this.rowInfo[startSpanIdx][colIdx];\n            return {\n                node: this.table.nodeAt(cellInfo.offset - this.tableStartOffset),\n                pos: cellInfo.offset,\n                startSpanIdx: startSpanIdx,\n                count: this.rowInfo[startSpanIdx].rowspanMap[colIdx].count,\n            };\n        }\n        return null;\n    },\n    getSpannedOffsets: function (selectionInfo) {\n        var startRowIdx = selectionInfo.startRowIdx, startColIdx = selectionInfo.startColIdx, endRowIdx = selectionInfo.endRowIdx, endColIdx = selectionInfo.endColIdx;\n        for (var rowIdx = endRowIdx; rowIdx >= startRowIdx; rowIdx -= 1) {\n            if (this.rowInfo[rowIdx]) {\n                var _a = this.rowInfo[rowIdx], rowspanMap = _a.rowspanMap, colspanMap = _a.colspanMap;\n                for (var colIdx = endColIdx; colIdx >= startColIdx; colIdx -= 1) {\n                    var rowspanInfo = rowspanMap[colIdx];\n                    var colspanInfo = colspanMap[colIdx];\n                    if (rowspanInfo) {\n                        startRowIdx = Math.min(startRowIdx, rowspanInfo.startSpanIdx);\n                    }\n                    if (colspanInfo) {\n                        startColIdx = Math.min(startColIdx, colspanInfo.startSpanIdx);\n                    }\n                }\n            }\n        }\n        for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n            if (this.rowInfo[rowIdx]) {\n                var _b = this.rowInfo[rowIdx], rowspanMap = _b.rowspanMap, colspanMap = _b.colspanMap;\n                for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                    var rowspanInfo = rowspanMap[colIdx];\n                    var colspanInfo = colspanMap[colIdx];\n                    if (rowspanInfo) {\n                        endRowIdx = Math.max(endRowIdx, rowIdx + rowspanInfo.count - 1);\n                    }\n                    if (colspanInfo) {\n                        endColIdx = Math.max(endColIdx, colIdx + colspanInfo.count - 1);\n                    }\n                }\n            }\n        }\n        return { startRowIdx: startRowIdx, startColIdx: startColIdx, endRowIdx: endRowIdx, endColIdx: endColIdx };\n    },\n};\nfunction extendPrevRowspan(prevRowInfo, rowInfo) {\n    var rowspanMap = rowInfo.rowspanMap, colspanMap = rowInfo.colspanMap;\n    var prevRowspanMap = prevRowInfo.rowspanMap, prevColspanMap = prevRowInfo.colspanMap;\n    Object.keys(prevRowspanMap).forEach(function (key) {\n        var colIdx = Number(key);\n        var prevRowspanInfo = prevRowspanMap[colIdx];\n        if ((prevRowspanInfo === null || prevRowspanInfo === void 0 ? void 0 : prevRowspanInfo.count) > 1) {\n            var prevColspanInfo = prevColspanMap[colIdx];\n            var count = prevRowspanInfo.count, startSpanIdx = prevRowspanInfo.startSpanIdx;\n            rowspanMap[colIdx] = { count: count - 1, startSpanIdx: startSpanIdx };\n            colspanMap[colIdx] = prevColspanInfo;\n            rowInfo[colIdx] = tableOffsetMapMixin_assign(tableOffsetMapMixin_assign({}, prevRowInfo[colIdx]), { extended: true });\n            rowInfo.length += 1;\n        }\n    });\n}\nfunction extendPrevColspan(rowspan, colspan, rowIdx, colIdx, rowInfo) {\n    var rowspanMap = rowInfo.rowspanMap, colspanMap = rowInfo.colspanMap;\n    for (var i = 1; i < colspan; i += 1) {\n        colspanMap[colIdx + i] = { count: colspan - i, startSpanIdx: colIdx };\n        if (rowspan > 1) {\n            rowspanMap[colIdx + i] = { count: rowspan, startSpanIdx: rowIdx };\n        }\n        rowInfo[colIdx + i] = tableOffsetMapMixin_assign({}, rowInfo[colIdx]);\n        rowInfo.length += 1;\n    }\n}\nvar createOffsetMapMixin = function (headOrBody, startOffset, startFromBody) {\n    if (startFromBody === void 0) { startFromBody = false; }\n    var cellInfoMatrix = [];\n    var beInBody = headOrBody.type.name === 'tableBody';\n    headOrBody.forEach(function (row, rowOffset, rowIdx) {\n        // get row index based on table(not table head or table body)\n        var rowIdxInWholeTable = beInBody && !startFromBody ? rowIdx + 1 : rowIdx;\n        var prevRowInfo = cellInfoMatrix[rowIdx - 1];\n        var rowInfo = { rowspanMap: {}, colspanMap: {}, length: 0 };\n        if (prevRowInfo) {\n            extendPrevRowspan(prevRowInfo, rowInfo);\n        }\n        row.forEach(function (_a, cellOffset) {\n            var _b, _c;\n            var nodeSize = _a.nodeSize, attrs = _a.attrs;\n            var colspan = (_b = attrs.colspan) !== null && _b !== void 0 ? _b : 1;\n            var rowspan = (_c = attrs.rowspan) !== null && _c !== void 0 ? _c : 1;\n            var colIdx = 0;\n            while (rowInfo[colIdx]) {\n                colIdx += 1;\n            }\n            rowInfo[colIdx] = {\n                // 2 is the sum of the front and back positions of the tag\n                offset: startOffset + rowOffset + cellOffset + 2,\n                nodeSize: nodeSize,\n            };\n            rowInfo.length += 1;\n            if (rowspan > 1) {\n                rowInfo.rowspanMap[colIdx] = { count: rowspan, startSpanIdx: rowIdxInWholeTable };\n            }\n            if (colspan > 1) {\n                rowInfo.colspanMap[colIdx] = { count: colspan, startSpanIdx: colIdx };\n                extendPrevColspan(rowspan, colspan, rowIdxInWholeTable, colIdx, rowInfo);\n            }\n        });\n        cellInfoMatrix.push(rowInfo);\n    });\n    return cellInfoMatrix;\n};\n\n// EXTERNAL MODULE: ../../node_modules/tui-code-snippet/collection/toArray.js\nvar toArray = __webpack_require__(990);\nvar toArray_default = /*#__PURE__*/__webpack_require__.n(toArray);\n;// CONCATENATED MODULE: ./src/wysiwyg/contextMenu.ts\n\nvar TABLE_CELL_SELECT_CLASS = '.toastui-editor-cell-selected';\nfunction hasSpanAttr(tableCell) {\n    return (Number(tableCell.getAttribute('colspan')) > 1 || Number(tableCell.getAttribute('rowspan')) > 1);\n}\nfunction hasSpanningCell(headOrBody) {\n    return toArray_default()(headOrBody.querySelectorAll(TABLE_CELL_SELECT_CLASS)).some(hasSpanAttr);\n}\nfunction isCellSelected(headOrBody) {\n    return !!headOrBody.querySelectorAll(TABLE_CELL_SELECT_CLASS).length;\n}\nfunction createMergedTableContextMenu(context, tableCell) {\n    var i18n = context.i18n, eventEmitter = context.eventEmitter;\n    var headOrBody = tableCell.parentElement.parentElement;\n    var mergedTableContextMenu = [];\n    if (isCellSelected(headOrBody)) {\n        mergedTableContextMenu.push({\n            label: i18n.get('Merge cells'),\n            onClick: function () { return eventEmitter.emit('command', 'mergeCells'); },\n            className: 'merge-cells',\n        });\n    }\n    if (hasSpanAttr(tableCell) || hasSpanningCell(headOrBody)) {\n        mergedTableContextMenu.push({\n            label: i18n.get('Split cells'),\n            onClick: function () { return eventEmitter.emit('command', 'splitCells'); },\n            className: 'split-cells',\n        });\n    }\n    return mergedTableContextMenu;\n}\nfunction addMergedTableContextMenu(context) {\n    context.eventEmitter.listen('contextmenu', function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a = args[0], menuGroups = _a.menuGroups, tableCell = _a.tableCell;\n        var mergedTableContextMenu = createMergedTableContextMenu(context, tableCell);\n        if (mergedTableContextMenu.length) {\n            // add merged table context menu on third group\n            menuGroups.splice(2, 0, mergedTableContextMenu);\n        }\n    });\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/util.ts\nvar util_assign = (undefined && undefined.__assign) || function () {\n    util_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return util_assign.apply(this, arguments);\n};\nfunction findNodeBy(pos, condition) {\n    var depth = pos.depth;\n    while (depth >= 0) {\n        var node = pos.node(depth);\n        if (condition(node, depth)) {\n            return {\n                node: node,\n                depth: depth,\n                offset: depth > 0 ? pos.before(depth) : 0,\n            };\n        }\n        depth -= 1;\n    }\n    return null;\n}\nfunction findCell(pos) {\n    return findNodeBy(pos, function (_a) {\n        var type = _a.type;\n        return type.name === 'tableHeadCell' || type.name === 'tableBodyCell';\n    });\n}\nfunction getResolvedSelection(selection, context) {\n    if (selection instanceof context.pmState.TextSelection) {\n        var $anchor = selection.$anchor;\n        var foundCell = findCell($anchor);\n        if (foundCell) {\n            var anchor = $anchor.node(0).resolve($anchor.before(foundCell.depth));\n            return { anchor: anchor, head: anchor };\n        }\n    }\n    var _a = selection, startCell = _a.startCell, endCell = _a.endCell;\n    return { anchor: startCell, head: endCell };\n}\nfunction getRowAndColumnCount(_a) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx, endRowIdx = _a.endRowIdx, endColIdx = _a.endColIdx;\n    return { rowCount: endRowIdx - startRowIdx + 1, columnCount: endColIdx - startColIdx + 1 };\n}\nfunction setAttrs(cell, attrs) {\n    return util_assign(util_assign({}, cell.attrs), attrs);\n}\nfunction getCellSelectionClass(selection) {\n    var proto = Object.getPrototypeOf(selection);\n    return proto.constructor;\n}\nfunction createDummyCells(columnCount, rowIdx, schema, attrs) {\n    if (attrs === void 0) { attrs = null; }\n    var _a = schema.nodes, tableHeadCell = _a.tableHeadCell, tableBodyCell = _a.tableBodyCell, paragraph = _a.paragraph;\n    var cell = rowIdx === 0 ? tableHeadCell : tableBodyCell;\n    var cells = [];\n    for (var index = 0; index < columnCount; index += 1) {\n        cells.push(cell.create(attrs, paragraph.create()));\n    }\n    return cells;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/mergeCells.ts\n\nfunction createMergeCellsCommand(context, OffsetMap) {\n    var FragmentClass = context.pmModel.Fragment;\n    var mergeCells = function (_, state, dispatch) {\n        var selection = state.selection, tr = state.tr;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        // @ts-ignore\n        // judge cell selection\n        if (!anchor || !head || !selection.isCellSelection) {\n            return false;\n        }\n        var map = OffsetMap.create(anchor);\n        var CellSelection = getCellSelectionClass(selection);\n        var totalRowCount = map.totalRowCount, totalColumnCount = map.totalColumnCount;\n        var selectionInfo = map.getRectOffsets(anchor, head);\n        var _b = getRowAndColumnCount(selectionInfo), rowCount = _b.rowCount, columnCount = _b.columnCount;\n        var startRowIdx = selectionInfo.startRowIdx, startColIdx = selectionInfo.startColIdx, endRowIdx = selectionInfo.endRowIdx, endColIdx = selectionInfo.endColIdx;\n        var allSelected = rowCount >= totalRowCount - 1 && columnCount === totalColumnCount;\n        var hasTableHead = startRowIdx === 0 && endRowIdx > startRowIdx;\n        if (allSelected || hasTableHead) {\n            return false;\n        }\n        var fragment = FragmentClass.empty;\n        for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n            for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                // set first cell content\n                if (rowIdx === startRowIdx && colIdx === startColIdx) {\n                    fragment = appendFragment(rowIdx, colIdx, fragment, map);\n                    // set each cell content and delete the cell for spanning\n                }\n                else if (!map.extendedRowspan(rowIdx, colIdx) && !map.extendedColspan(rowIdx, colIdx)) {\n                    var _c = map.getCellInfo(rowIdx, colIdx), offset = _c.offset, nodeSize = _c.nodeSize;\n                    var from = tr.mapping.map(offset);\n                    var to = from + nodeSize;\n                    fragment = appendFragment(rowIdx, colIdx, fragment, map);\n                    tr.delete(from, to);\n                }\n            }\n        }\n        var _d = map.getNodeAndPos(startRowIdx, startColIdx), node = _d.node, pos = _d.pos;\n        // set rowspan, colspan to first root cell\n        setSpanToRootCell(tr, fragment, {\n            startNode: node,\n            startPos: pos,\n            rowCount: rowCount,\n            columnCount: columnCount,\n        });\n        tr.setSelection(new CellSelection(tr.doc.resolve(pos)));\n        dispatch(tr);\n        return true;\n    };\n    return mergeCells;\n}\nfunction setSpanToRootCell(tr, fragment, rangeInfo) {\n    var startNode = rangeInfo.startNode, startPos = rangeInfo.startPos, rowCount = rangeInfo.rowCount, columnCount = rangeInfo.columnCount;\n    tr.setNodeMarkup(startPos, null, setAttrs(startNode, { colspan: columnCount, rowspan: rowCount }));\n    if (fragment.size) {\n        // add 1 for text start offset(not node start offset)\n        tr.replaceWith(startPos + 1, startPos + startNode.content.size, fragment);\n    }\n}\nfunction appendFragment(rowIdx, colIdx, fragment, map) {\n    var targetFragment = map.getNodeAndPos(rowIdx, colIdx).node.content;\n    // prevent to add empty string\n    return targetFragment.size > 2 ? fragment.append(targetFragment) : fragment;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/splitCells.ts\n\nfunction getColspanEndIdx(rowIdx, colIdx, map) {\n    var endColIdx = colIdx;\n    if (!map.extendedRowspan(rowIdx, colIdx) && map.extendedColspan(rowIdx, colIdx)) {\n        var _a = map.getColspanStartInfo(rowIdx, colIdx), startSpanIdx = _a.startSpanIdx, count = _a.count;\n        endColIdx = startSpanIdx + count;\n    }\n    return endColIdx;\n}\nfunction judgeInsertToNextRow(map, mappedPos, rowIdx, colIdx) {\n    var totalColumnCount = map.totalColumnCount;\n    return (map.extendedRowspan(rowIdx, colIdx) &&\n        map.extendedRowspan(rowIdx, totalColumnCount - 1) &&\n        mappedPos === map.posAt(rowIdx, totalColumnCount - 1));\n}\nfunction createSplitCellsCommand(context, OffsetMap) {\n    var splitCells = function (_, state, dispatch, view) {\n        var selection = state.selection, tr = state.tr;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        if (!anchor || !head) {\n            return false;\n        }\n        var map = OffsetMap.create(anchor);\n        var selectionInfo = map.getRectOffsets(anchor, head);\n        var startRowIdx = selectionInfo.startRowIdx, startColIdx = selectionInfo.startColIdx, endRowIdx = selectionInfo.endRowIdx, endColIdx = selectionInfo.endColIdx;\n        var lastCellPos = -1;\n        for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n            for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                if (map.extendedRowspan(rowIdx, colIdx) || map.extendedColspan(rowIdx, colIdx)) {\n                    // insert empty cell in spanning cell position\n                    var node = map.getNodeAndPos(rowIdx, colIdx).node;\n                    var colspanEndIdx = getColspanEndIdx(rowIdx, colIdx, map);\n                    var mappedPos = map.posAt(rowIdx, colspanEndIdx);\n                    var pos = tr.mapping.map(mappedPos);\n                    // add 2(tr end, open tag length) to insert the cell on the next row\n                    // in case that all next cells are spanning on the current row\n                    if (judgeInsertToNextRow(map, mappedPos, rowIdx, colspanEndIdx)) {\n                        pos += 2;\n                    }\n                    // get the last cell position for cell selection after splitting cells\n                    lastCellPos = Math.max(pos, lastCellPos);\n                    tr.insert(pos, node.type.createAndFill(setAttrs(node, { colspan: null, rowspan: null })));\n                }\n                else {\n                    // remove colspan, rowspan of the root spanning cell\n                    var _b = map.getNodeAndPos(rowIdx, colIdx), node = _b.node, pos = _b.pos;\n                    // get the last cell position for cell selection after splitting cells\n                    lastCellPos = Math.max(tr.mapping.map(pos), lastCellPos);\n                    tr.setNodeMarkup(tr.mapping.map(pos), null, setAttrs(node, { colspan: null, rowspan: null }));\n                }\n            }\n        }\n        dispatch(tr);\n        setCellSelection(view, selection, OffsetMap, map.tableStartOffset, selectionInfo);\n        return true;\n    };\n    return splitCells;\n}\nfunction setCellSelection(view, selection, OffsetMap, tableStartPos, selectionInfo) {\n    // @ts-ignore\n    // judge cell selection\n    if (selection.isCellSelection) {\n        var tr = view.state.tr;\n        var CellSelection = getCellSelectionClass(selection);\n        var startRowIdx = selectionInfo.startRowIdx, startColIdx = selectionInfo.startColIdx, endRowIdx = selectionInfo.endRowIdx, endColIdx = selectionInfo.endColIdx;\n        // get changed cell offsets\n        var map = OffsetMap.create(tr.doc.resolve(tableStartPos));\n        var startOffset = map.getCellInfo(startRowIdx, startColIdx).offset;\n        var endOffset = map.getCellInfo(endRowIdx, endColIdx).offset;\n        tr.setSelection(new CellSelection(tr.doc.resolve(startOffset), tr.doc.resolve(endOffset)));\n        view.dispatch(tr);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/removeColumn.ts\n\nfunction createRemoveColumnCommand(context, OffsetMap) {\n    var removeColumn = function (_, state, dispatch) {\n        var selection = state.selection, tr = state.tr;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        if (!anchor || !head) {\n            return false;\n        }\n        var map = OffsetMap.create(anchor);\n        var selectionInfo = map.getRectOffsets(anchor, head);\n        var totalColumnCount = map.totalColumnCount, totalRowCount = map.totalRowCount;\n        var columnCount = getRowAndColumnCount(selectionInfo).columnCount;\n        var selectedAllColumn = columnCount === totalColumnCount;\n        if (selectedAllColumn) {\n            return false;\n        }\n        var startColIdx = selectionInfo.startColIdx, endColIdx = selectionInfo.endColIdx;\n        var mapStart = tr.mapping.maps.length;\n        for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n            for (var colIdx = endColIdx; colIdx >= startColIdx; colIdx -= 1) {\n                var _b = map.getCellInfo(rowIdx, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n                var colspanInfo = map.getColspanStartInfo(rowIdx, colIdx);\n                if (!map.extendedRowspan(rowIdx, colIdx)) {\n                    // decrease colspan count inside the col-spanning cell\n                    if ((colspanInfo === null || colspanInfo === void 0 ? void 0 : colspanInfo.count) > 1) {\n                        var _c = map.getColspanStartInfo(rowIdx, colIdx), node = _c.node, pos = _c.pos;\n                        var colspan = map.decreaseColspanCount(rowIdx, colIdx);\n                        var attrs = setAttrs(node, { colspan: colspan > 1 ? colspan : null });\n                        tr.setNodeMarkup(tr.mapping.slice(mapStart).map(pos), null, attrs);\n                    }\n                    else {\n                        var from = tr.mapping.slice(mapStart).map(offset);\n                        var to = from + nodeSize;\n                        tr.delete(from, to);\n                    }\n                }\n            }\n        }\n        dispatch(tr);\n        return true;\n    };\n    return removeColumn;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/removeRow.ts\n\nfunction getRowRanges(map, rowIdx) {\n    var totalColumnCount = map.totalColumnCount;\n    var from = Number.MAX_VALUE;\n    var to = 0;\n    for (var colIdx = 0; colIdx < totalColumnCount; colIdx += 1) {\n        if (!map.extendedRowspan(rowIdx, colIdx)) {\n            var _a = map.getCellInfo(rowIdx, colIdx), offset = _a.offset, nodeSize = _a.nodeSize;\n            from = Math.min(from, offset);\n            to = Math.max(to, offset + nodeSize);\n        }\n    }\n    return { from: from, to: to };\n}\nfunction createRemoveRowCommand(context, OffsetMap) {\n    var removeRow = function (_, state, dispatch) {\n        var selection = state.selection, tr = state.tr;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        if (anchor && head) {\n            var map = OffsetMap.create(anchor);\n            var totalRowCount = map.totalRowCount, totalColumnCount = map.totalColumnCount;\n            var selectionInfo = map.getRectOffsets(anchor, head);\n            var rowCount = getRowAndColumnCount(selectionInfo).rowCount;\n            var startRowIdx = selectionInfo.startRowIdx, endRowIdx = selectionInfo.endRowIdx;\n            var selectedThead = startRowIdx === 0;\n            var selectedAllTbodyRow = rowCount === totalRowCount - 1;\n            if (selectedAllTbodyRow || selectedThead) {\n                return false;\n            }\n            for (var rowIdx = endRowIdx; rowIdx >= startRowIdx; rowIdx -= 1) {\n                var mapStart = tr.mapping.maps.length;\n                var _b = getRowRanges(map, rowIdx), from = _b.from, to = _b.to;\n                // delete table row\n                tr.delete(from - 1, to + 1);\n                for (var colIdx = 0; colIdx < totalColumnCount; colIdx += 1) {\n                    var rowspanInfo = map.getRowspanStartInfo(rowIdx, colIdx);\n                    if ((rowspanInfo === null || rowspanInfo === void 0 ? void 0 : rowspanInfo.count) > 1 && !map.extendedColspan(rowIdx, colIdx)) {\n                        // decrease rowspan count inside the row-spanning cell\n                        // eslint-disable-next-line max-depth\n                        if (map.extendedRowspan(rowIdx, colIdx)) {\n                            var _c = map.getRowspanStartInfo(rowIdx, colIdx), node = _c.node, pos = _c.pos;\n                            var rowspan = map.decreaseRowspanCount(rowIdx, colIdx);\n                            var attrs = setAttrs(node, { rowspan: rowspan > 1 ? rowspan : null });\n                            tr.setNodeMarkup(tr.mapping.slice(mapStart).map(pos), null, attrs);\n                            // the row-spanning cell should be moved down\n                        }\n                        else if (!map.extendedRowspan(rowIdx, colIdx)) {\n                            var _d = map.getRowspanStartInfo(rowIdx, colIdx), node = _d.node, count = _d.count;\n                            var attrs = setAttrs(node, { rowspan: count > 2 ? count - 1 : null });\n                            var copiedCell = node.type.create(attrs, node.content);\n                            tr.insert(tr.mapping.slice(mapStart).map(map.posAt(rowIdx + 1, colIdx)), copiedCell);\n                        }\n                    }\n                }\n                map = OffsetMap.create(tr.doc.resolve(map.tableStartOffset));\n            }\n            dispatch(tr);\n            return true;\n        }\n        return false;\n    };\n    return removeRow;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/direction.ts\n// eslint-disable-next-line no-shadow\nvar Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"left\";\n    Direction[\"RIGHT\"] = \"right\";\n    Direction[\"UP\"] = \"up\";\n    Direction[\"DOWN\"] = \"down\";\n})(Direction || (Direction = {}));\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/addRow.ts\n\n\nfunction getTargetRowInfo(direction, map, selectionInfo) {\n    var targetRowIdx;\n    var judgeToExtendRowspan;\n    var insertColIdx;\n    var nodeSize;\n    if (direction === Direction.UP) {\n        targetRowIdx = selectionInfo.startRowIdx;\n        judgeToExtendRowspan = function (colIdx) { return map.extendedRowspan(targetRowIdx, colIdx); };\n        insertColIdx = 0;\n        nodeSize = -1;\n    }\n    else {\n        targetRowIdx = selectionInfo.endRowIdx;\n        judgeToExtendRowspan = function (colIdx) { return map.getRowspanCount(targetRowIdx, colIdx) > 1; };\n        insertColIdx = map.totalColumnCount - 1;\n        nodeSize = !map.extendedRowspan(targetRowIdx, insertColIdx)\n            ? map.getCellInfo(targetRowIdx, insertColIdx).nodeSize + 1\n            : 2;\n    }\n    return { targetRowIdx: targetRowIdx, judgeToExtendRowspan: judgeToExtendRowspan, insertColIdx: insertColIdx, nodeSize: nodeSize };\n}\nfunction createAddRowCommand(context, OffsetMap, direction) {\n    var addRow = function (_, state, dispatch) {\n        var selection = state.selection, schema = state.schema, tr = state.tr;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        if (!anchor || !head) {\n            return false;\n        }\n        var map = OffsetMap.create(anchor);\n        var totalColumnCount = map.totalColumnCount;\n        var selectionInfo = map.getRectOffsets(anchor, head);\n        var rowCount = getRowAndColumnCount(selectionInfo).rowCount;\n        var _b = getTargetRowInfo(direction, map, selectionInfo), targetRowIdx = _b.targetRowIdx, judgeToExtendRowspan = _b.judgeToExtendRowspan, insertColIdx = _b.insertColIdx, nodeSize = _b.nodeSize;\n        var selectedThead = targetRowIdx === 0;\n        if (selectedThead) {\n            return false;\n        }\n        var rows = [];\n        var from = tr.mapping.map(map.posAt(targetRowIdx, insertColIdx)) + nodeSize;\n        var cells = [];\n        for (var colIdx = 0; colIdx < totalColumnCount; colIdx += 1) {\n            // increase rowspan count inside the row-spanning cell\n            if (judgeToExtendRowspan(colIdx)) {\n                var _c = map.getRowspanStartInfo(targetRowIdx, colIdx), node = _c.node, pos = _c.pos;\n                var attrs = setAttrs(node, { rowspan: node.attrs.rowspan + rowCount });\n                tr.setNodeMarkup(tr.mapping.map(pos), null, attrs);\n            }\n            else {\n                cells = cells.concat(createDummyCells(1, targetRowIdx, schema));\n            }\n        }\n        for (var i = 0; i < rowCount; i += 1) {\n            rows.push(schema.nodes.tableRow.create(null, cells));\n        }\n        dispatch(tr.insert(from, rows));\n        return true;\n    };\n    return addRow;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/command/addColumn.ts\n\n\nfunction getTargetColInfo(direction, map, selectionInfo) {\n    var targetColIdx;\n    var judgeToExtendColspan;\n    var insertColIdx;\n    if (direction === Direction.LEFT) {\n        targetColIdx = selectionInfo.startColIdx;\n        judgeToExtendColspan = function (rowIdx) { return map.extendedColspan(rowIdx, targetColIdx); };\n        insertColIdx = targetColIdx;\n    }\n    else {\n        targetColIdx = selectionInfo.endColIdx;\n        judgeToExtendColspan = function (rowIdx) { return map.getColspanCount(rowIdx, targetColIdx) > 1; };\n        insertColIdx = targetColIdx + 1;\n    }\n    return { targetColIdx: targetColIdx, judgeToExtendColspan: judgeToExtendColspan, insertColIdx: insertColIdx };\n}\nfunction createAddColumnCommand(context, OffsetMap, direction) {\n    var addColumn = function (_, state, dispatch) {\n        var selection = state.selection, tr = state.tr, schema = state.schema;\n        var _a = getResolvedSelection(selection, context), anchor = _a.anchor, head = _a.head;\n        if (!anchor || !head) {\n            return false;\n        }\n        var map = OffsetMap.create(anchor);\n        var selectionInfo = map.getRectOffsets(anchor, head);\n        var _b = getTargetColInfo(direction, map, selectionInfo), targetColIdx = _b.targetColIdx, judgeToExtendColspan = _b.judgeToExtendColspan, insertColIdx = _b.insertColIdx;\n        var columnCount = getRowAndColumnCount(selectionInfo).columnCount;\n        var totalRowCount = map.totalRowCount;\n        for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n            // increase colspan count inside the col-spanning cell\n            if (judgeToExtendColspan(rowIdx)) {\n                var _c = map.getColspanStartInfo(rowIdx, targetColIdx), node = _c.node, pos = _c.pos;\n                var attrs = setAttrs(node, { colspan: node.attrs.colspan + columnCount });\n                tr.setNodeMarkup(tr.mapping.map(pos), null, attrs);\n            }\n            else {\n                var cells = createDummyCells(columnCount, rowIdx, schema);\n                tr.insert(tr.mapping.map(map.posAt(rowIdx, insertColIdx)), cells);\n            }\n        }\n        dispatch(tr);\n        return true;\n    };\n    return addColumn;\n}\n\n;// CONCATENATED MODULE: ./src/wysiwyg/commandFactory.ts\n\n\n\n\n\n\n\nfunction createCommands(context, OffsetMap) {\n    return {\n        mergeCells: createMergeCellsCommand(context, OffsetMap),\n        splitCells: createSplitCellsCommand(context, OffsetMap),\n        addRowToUp: createAddRowCommand(context, OffsetMap, Direction.UP),\n        addRowToDown: createAddRowCommand(context, OffsetMap, Direction.DOWN),\n        removeRow: createRemoveRowCommand(context, OffsetMap),\n        addColumnToLeft: createAddColumnCommand(context, OffsetMap, Direction.LEFT),\n        addColumnToRight: createAddColumnCommand(context, OffsetMap, Direction.RIGHT),\n        removeColumn: createRemoveColumnCommand(context, OffsetMap),\n    };\n}\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\n\n\n\n\nfunction tableMergedCellPlugin(context) {\n    var i18n = context.i18n, eventEmitter = context.eventEmitter;\n    var TableOffsetMap = eventEmitter.emitReduce('mixinTableOffsetMapPrototype', offsetMapMixin, createOffsetMapMixin);\n    addLangs(i18n);\n    addMergedTableContextMenu(context);\n    return {\n        toHTMLRenderers: toHTMLRenderers,\n        markdownParsers: markdownParsers,\n        toMarkdownRenderers: toMarkdownRenderers,\n        wysiwygCommands: createCommands(context, TableOffsetMap),\n    };\n}\n\n}();\nmodule.exports = __webpack_exports__[\"default\"];\n/******/ })()\n;"],
  "mappings": "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",
  "names": ["module", "__webpack_require__", "exports", "Direction"]
}
